<?xml version="1.0" ?>
<cherrytree>
	<node custom_icon_id="0" foreground="" is_bold="False" name="Chapter 1" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601270969.03" ts_lastsave="1609619432.68" unique_id="1">
		<rich_text>Review Questions and Exercises



</rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="1.1 Intro to Assembly" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601271028.35" ts_lastsave="1609617331.32" unique_id="2">
			<rich_text>MASM is going to be used with this book.

An assembler is a utility program that converts source code programs from assembly language into machine language. 
A linker is a utility program that combines individual files created by an assembler into a single executable program

Assembly language:
• Is the oldest programming language
• Has a 1 to 1 correspondence with machine language instructions
• Is not very portable

High level languages:
• Have a 1 to many correspondence with machine language instructions
• Are very portable

Registers are named storage locations in the CPU that hold intermediate results of operations

Section review:
1. Assemblers work to turn assembly into machine code, linkers put multiple libraries and files together into one executable
2. Since assembly has a 1 to 1 correspondence with machine code, if you know assembly then you have a good understanding of how a computer works on a fundamental level
3. High level languages will expound simple statements or lines into many lines of machine code. 
4. Portability is the ability to write one version of code and run it on different computers
5. No, the assembly language for different architectures is different. Because assembly tracks machine instructions, different architectures with different machine instructions have different assembly languages.
6. A watch
7. A device driver is a program that runs on a computer that interfaces between the computer and an external device
8. Less strict, in assembly you can get away with a lot of stuff until technical debt builds up and then you need to debug.
9. Firmware for a car, and software for a game console.
10. Because a high level language might not have access to low level system calls for printing
11. Because it would be a lot of code to maintain at once, by virtue of complexity large software projects are not suited for assembly
12.

int Y;
int X = (Y * 4) + 3;

mov eax,Y;
mov ebx,4;
imul ebx;
add eax,3;
mov x,eax;</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="1.2 Virtual Machine Concept" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601323698.46" ts_lastsave="1609617991.84" unique_id="3">
			<rich_text>L0: Machine code
L1: Assembly code
L2+: High level languages

Interpretation: As the L1 program is running, each of its instructions could be decoded and executed by a program written in language L0. The L1 program runs immediately, but each instruction has to be decoded before it can execute.
Translation: The entire L1 program could be converted into an L0 program by an L0 program designed for this purpose. Then the resulting L0 program could be executed on the hardware.

A virtual machine named VM1 can execute commands written in L1, the virtual machine VM0 can execute commands written in L0. Since each VM can be constructed either of hardware or software, we can keep stacking VMs on until we reach a very human readable language. Java basically does this with the Java Virtual Machine (JVM).

Specific Machines
    Level 1: Digital logic hardware.
    Level 2: Instruction Set Architecture. The instructions designated by chip manufacturers for move, add, and multiply. These instructions are either executed by the computers hardware or a program embedded in the microprocessor called a microprogram.
    Level 3: Assembly language, 1:1 transferrable to ISA.
    Level 4: High level language that compiles downwards.
    
1. Languages are built upon each other, using either interpretartion or translation, and likewise machines can be emulated upon each other using these principles. 
2. Because interpretation takes longer. Interpreted languages run immediately, but each instruction has to be decoded at runtime. Whereas a translation can occur long before runtime.
3. True
4. Translation is important because at multiple machine levels it has to be done a certain number of times to eventually reach L0
5. L3
6. The Java Virtual Machine
7. Digital logic, ISA, Assembly Language, High level language
8. Because it's made for computers and since assembly is already 1:1 there wouldn't be a reason to
9. ISA
10. Level 2, Instruction Set Architecture</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="1.3 Data Representation" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601350140.45" ts_lastsave="1609619025.3" unique_id="4">
			<rich_text>Programmers need to be able to represent data in different ways.

Bit: A binary digit
Bit on the left: most significant bit
Bit on the right: least significant bit

A signed integer is positive or negative, an unsigned integer is by default positive. Zero is considered positive. Sometimes people will put a dot every 4 or 8 bits to make the number more readable.

To find the number of bits you need when translating from decimal to binary, do log2 (n) = bits. Raise bits to the smallest following integer.

An x86 computer can store different types of integers. A byte is 8 bits, a word is 16 bits, a quadword is 64 bits, and a double quadword is 128 bits.

• One kilobyte is equal to 2 10 , or 1024 bytes.
• One megabyte (1 MByte) is equal to 2 20 , or 1,048,576 bytes.
• One gigabyte (1 GByte) is equal to 2 30 , or 1024 3 , or 1,073,741,824 bytes.
• One terabyte (1 TByte) is equal to 2 40 , or 1024 4 , or 1,099,511,627,776 bytes.
• One petabyte is equal to 2 50 , or 1,125,899,906,842,624 bytes.
• One exabyte is equal to 2 60 , or 1,152,921,504,606,846,976 bytes.
• One zettabyte is equal to 2 70 bytes.
• One yottabyte is equal to 2 80 bytes.

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

Signed Binary Integers:

The MSB indicates the sign: 0 is positive and 1 is negative. Negative integers use two's complement representation, using the mathematical principle that the two's complement of an integer is its additive inverse. Two's complement happens when you invert an integer and add one. 00000001 becomes 11111111. 

To do two's complement on a hexadecimal number, subtract the digits from 15 and add 1.

Maximum and minimum values

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

ASCII characrer 0 through 31 are called control characters. If a program writes these to stdout, the control characters will carry out predefined actions. </rich_text>
			<table char_offset="1153" col_max="60" col_min="40">
				<row>
					<cell>0000</cell>
					<cell>0</cell>
					<cell>0</cell>
				</row>
				<row>
					<cell>0001</cell>
					<cell>1</cell>
					<cell>1</cell>
				</row>
				<row>
					<cell>0010</cell>
					<cell>2</cell>
					<cell>2</cell>
				</row>
				<row>
					<cell>0011</cell>
					<cell>3</cell>
					<cell>3</cell>
				</row>
				<row>
					<cell>0100</cell>
					<cell>4</cell>
					<cell>4</cell>
				</row>
				<row>
					<cell>0101</cell>
					<cell>5</cell>
					<cell>5</cell>
				</row>
				<row>
					<cell>0110</cell>
					<cell>6</cell>
					<cell>6</cell>
				</row>
				<row>
					<cell>0111</cell>
					<cell>7</cell>
					<cell>7</cell>
				</row>
				<row>
					<cell>1000</cell>
					<cell>8</cell>
					<cell>8</cell>
				</row>
				<row>
					<cell>1001</cell>
					<cell>9</cell>
					<cell>9</cell>
				</row>
				<row>
					<cell>1010</cell>
					<cell>10</cell>
					<cell>A</cell>
				</row>
				<row>
					<cell>1011</cell>
					<cell>11</cell>
					<cell>B</cell>
				</row>
				<row>
					<cell>1100</cell>
					<cell>12</cell>
					<cell>C</cell>
				</row>
				<row>
					<cell>1101</cell>
					<cell>13</cell>
					<cell>D</cell>
				</row>
				<row>
					<cell>1110</cell>
					<cell>14</cell>
					<cell>E</cell>
				</row>
				<row>
					<cell>1111</cell>
					<cell>15</cell>
					<cell>F</cell>
				</row>
				<row>
					<cell>Binary</cell>
					<cell>Decimal</cell>
					<cell>Hexadecimal</cell>
				</row>
			</table>
			<table char_offset="1605" col_max="60" col_min="40">
				<row>
					<cell>Signed Byte</cell>
					<cell>-2^7 to 2^7-1</cell>
					<cell>8</cell>
				</row>
				<row>
					<cell>Signed word</cell>
					<cell>-2^15 to +2^15-1</cell>
					<cell>16</cell>
				</row>
				<row>
					<cell>Signed doubleword</cell>
					<cell>-2^31 to +2^31-1</cell>
					<cell>32</cell>
				</row>
				<row>
					<cell>Signed quadword</cell>
					<cell>-2^63 to +2^63-1</cell>
					<cell>64</cell>
				</row>
				<row>
					<cell>Signed double quadword</cell>
					<cell>-2^127 to +2^12701</cell>
					<cell>128</cell>
				</row>
				<row>
					<cell>Type</cell>
					<cell>Range</cell>
					<cell>Storage Size in Bits</cell>
				</row>
			</table>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="1.4 Boolean Expressions" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601352617.55" ts_lastsave="1609619402.71" unique_id="5">
			<rich_text>A boolean expression involves a boolean operator and one or more operands. Each boolean
expression implies a value of true or false. The set of operators includes the following:
• NOT: notated as ¬ or ~ or ’
• AND: notated as ∧ or •
• OR: notated as ∨ or +

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

Operator precedence rules are used to indicate which operators exe-
cute first in expressions involving multiple operators. In a boolean expression involving more
than one operator, precedence is important. As shown in the following table, the NOT operator
has the highest precedence, followed by AND and OR. You can use parentheses to force the ini-
tial evaluation of an expression:

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

1. (NOT X) OR Y
2. X AND Y
3. T
4. F
5. T</rich_text>
			<table char_offset="258" col_max="60" col_min="40">
				<row>
					<cell>¬ X</cell>
					<cell>NOT X</cell>
				</row>
				<row>
					<cell>X ∧ Y</cell>
					<cell>X AND Y</cell>
				</row>
				<row>
					<cell>X ∨ Y</cell>
					<cell>X OR Y</cell>
				</row>
				<row>
					<cell>¬ X ∨ Y</cell>
					<cell>(NOT X) OR Y</cell>
				</row>
				<row>
					<cell>¬ (X ∧ Y)</cell>
					<cell>(NOT X) OR Y</cell>
				</row>
				<row>
					<cell>X ∧ ¬ Y</cell>
					<cell>NOT (X AND Y)</cell>
				</row>
				<row>
					<cell>Expression</cell>
					<cell>Description</cell>
				</row>
			</table>
			<table char_offset="647" col_max="60" col_min="40">
				<row>
					<cell>¬ X ∨ Y</cell>
					<cell>NOT, then OR</cell>
				</row>
				<row>
					<cell>¬ (X ∨ Y)</cell>
					<cell>OR, then NOT</cell>
				</row>
				<row>
					<cell>X ∨ (Y ∧ Z)</cell>
					<cell>AND, then OR</cell>
				</row>
				<row>
					<cell>Expression</cell>
					<cell>Order of Operations</cell>
				</row>
			</table>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="1.7 Review Questions and Exercises" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1609619445.31" ts_lastsave="1609620033.4" unique_id="16">
			<rich_text>1. The leftmost bit
2.
• 53
• 150
• 204
3.
• 110001010
• 110010110
• 100100001
4. 00000110
5.
• 16
• 32
• 64
• 128
6.
• 12
• 16
• 16
7. 
• A037DC178C2
• 3E88B8DF8732B
• 3F28CB11E09C3
8. 
• 0001001001101111100111010100
• 01101010110011011111101010010101
• 11110110100110111101110000101010
9. 
• 58
• 447
• 4097
 10.
</rich_text>
		</node>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="False" name="Chapter 2" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601440485.15" ts_lastsave="1601773224.91" unique_id="6">
		<rich_text>Chapter 2 is focused on x86 processor architecture</rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="2.1 General Concepts" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601440502.06" ts_lastsave="1609623458.72" unique_id="8">
			<rich_text>Chapter 2 will go over the x86 architecture from a programmers point of view

• The clock synchronizes the internal operations of the CPU with other system components.
• The control unit (CU) coordinates the sequencing of steps involved in executing machine
instructions.
• The arithmetic logic unit (ALU) performs arithmetic operation
• The memory storage unit holds instructions and data are held for when a program is running
• A bus is a parallel set of wires that transfer data from one part of the computer to another. 

A computer system usually contains four bus types: data, I/O, control, and address. The data bus transfers instructions and data between the CPU and memory. The I/O bus transfers data between the CPU and the systm input/output devices. The control bus uses binary signals to synchronize actions of all devices attached to the system bus. The address bus holds the addresses of instructions and data when the currently executing instruction transfers data betweeen the CPU and memory.

A clock cycle is depicted as the time between one falling edge and the next (one period). A clock speed is measured in oscillations per second, 1 GHz/s is a clock cycle with a duration of one billionth of a second. A machine instruction requires at least one clock cycle to execute, and a few require in excess of 50 clocks (the multiply instruction on the 8088 processor, for example). 

Instruction Execution Cycle

1. The CPU fetches the instruction from an area of memory called the instruction queue. Then, the CPU incredments the instruction pointer
2. The CPU decodes the instruction by looking at its binary bit pattern.
3. If operands are involved, the CPU fetches the operands from registers and memory. Sometimes, this involves address calculations
4. The CPU executes the instructions, using any operand values it fetched during the earlier step. It also fetches a few status flags, such as Zero, Carry, and Overflow.
5. If there is an operand then the CPU stores the result of its execution in the operand.

This can be simplified to </rich_text>
			<rich_text weight="heavy">Fetch</rich_text>
			<rich_text>, </rich_text>
			<rich_text weight="heavy">Decode</rich_text>
			<rich_text>, and </rich_text>
			<rich_text weight="heavy">Execute</rich_text>
			<rich_text>.

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

Computers read from memory much slower than accessing internal registers because acessing memory requires 4 steps. 

1. Place the address of the value you want to read on the address bus.
2. Assert (change the value of) the processor’s RD (read) pin.
3. Wait one clock cycle for the memory chips to respond.
4. Copy the data from the data bus into the destination operand.

A cache hit is when the CPU looks for data in cache memory, and a cache hit miss is when the CPU looks but cant find it.

sRAM: static RAM that doesn't have to be refreshed
dRAM: Dynamic RAM that must be refreshed constantly

Before a program can run, it has to be loaded into memory. The OS must point the CPU at the program's entry point, an address at which it starts instructions. 

• The operating system (OS) searches for the program’s filename in the current disk directory.
If it cannot find the name there, it searches a predetermined list of directories (called paths)
for the filename. If the OS fails to find the program filename, it issues an error message.
• If the program file is found, the OS retrieves basic information about the program’s file from
the disk directory, including the file size and its physical location on the disk drive.
• The OS determines the next available location in memory and loads the program file into mem-
ory. It allocates a block of memory to the program and enters information about the program’s
size and location into a table (sometimes called a descriptor table). Additionally, the OS may
adjust the values of pointers within the program so they contain addresses of program data.
• The OS begins execution of the program’s first machine instruction (its entry point). As soon
as the program begins running, it is called a process. The OS assigns the process an identifi-
cation number (process ID), which is used to keep track of it while running.
• The process runs by itself. It is the OS’s job to track the execution of the process and to
respond to requests for system resources. Examples of resources are memory, disk files, and
input-output devices.
• When the process ends, it is removed from memory.

Section Review
1. Control unit, ALU, and clock
2. Data, address, and control buses
3. Because registers can be read immedately, while memory takes 4 instruction cycles because the data bus must be changed, and then read from memory.
4. Fetch, decode, execute
5. Fetch memory operands, store memory operands</rich_text>
			<encoded_png char_offset="2088"></encoded_png>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="2.2 32-Bit x86 Processors" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601577797.28" ts_lastsave="1609624081.48" unique_id="9">
			<rich_text>x86 processors have 3 modes of operation: protected mode, real-address mode, and system management mode. A sub mode, named virtual-8086, is a special case of protected mode.

</rich_text>
			<rich_text weight="heavy">Protected Mode </rich_text>
			<rich_text>Protected mode is the native state of the processor, in which all instructions
and features are available. Programs are given separate memory areas named segments, and the
processor prevents programs from referencing memory outside their assigned segments.
</rich_text>
			<rich_text weight="heavy">Virtual-8086</rich_text>
			<rich_text> Mode While in protected mode, the processor can directly execute real-address
mode software such as MS-DOS programs in a safe environment. In other words, if a program
crashes or attempts to write data into the system memory area, it will not affect other programs
running at the same time. A modern operating system can execute multiple separate virtual-8086
sessions at the same time.
</rich_text>
			<rich_text weight="heavy">Real-Address Mode</rich_text>
			<rich_text> Real-address mode implements the programming environment of an
early Intel processor with a few extra features, such as the ability to switch into other modes.
This mode is useful if a program requires direct access to system memory and hardware
devices.
</rich_text>
			<rich_text weight="heavy">System Management Mode</rich_text>
			<rich_text> System management mode (SMM) provides an operating sys-
tem with a mechanism for implementing functions such as power management and system secu-
rity. These functions are usually implement

Registers are high speed storage locations directly inside the CPU, designed to be accessed at much higher speed than conventional memory. When a processing loop is optimized for speed, for example, loop counters are held in registers rather than variables. General-Purpose Registers The general-purpose registers are primarily used for arith-metic and data movement. As shown in Figure 2-4, the lower 16 bits of the EAX register can be referenced by the name AX.

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

32-Bit General-Purpose registers:
• EAX
• EBX
• ECX
• EDX

• EBP
• ESP
• ESI
• EDI

16-bit Segment registers

• CS
• SS
• DS
• GS
• FS
• ES

Misc

• EFLAGS
• EIP

You can access portions of registers in 8 bit or 16 bit increments.

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

The remaining general purpose registers can only be accesssed using 32-bit or 16-bit  names

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

</rich_text>
			<rich_text weight="heavy">Specialized Uses</rich_text>
			<rich_text> Some general-purpose registers have specialized uses:
• EAX is automatically used by multiplication and division instructions. It is often called the
extended accumulator register.
• The CPU automatically uses ECX as a loop counter.
• ESP addresses data on the stack (a system memory structure). It is rarely used for ordinary
arithmetic or data transfer. It is often called the extended stack pointer register.
• ESI and EDI are used by high-speed memory transfer instructions. They are sometimes called
the extended source index and extended destination index registers.
• EBP is used by high-level languages to reference function parameters and local variables on
the stack. It should not be used for ordinary arithmetic or data transfer except at an advanced
level of programming. It is often called the extended frame pointer register.

</rich_text>
			<rich_text weight="heavy">Segment Registers</rich_text>
			<rich_text> In real-address mode, 16-bit segment registers indicate base addresses of
preassigned memory areas named segments. In protected mode, segment registers hold pointers
to segment descriptor tables. Some segments hold program instructions (code), others hold vari-
ables (data), and another segment named the stack segment holds local function variables and
function parameters.

</rich_text>
			<rich_text weight="heavy">Instruction Pointer </rich_text>
			<rich_text>The EIP, or instruction pointer, register contains the address of the next
instruction to be executed. Certain machine instructions manipulate EIP, causing the program to
branch to a new location.

</rich_text>
			<rich_text weight="heavy">EFLAGS</rich_text>
			<rich_text> Register The EFLAGS (or just Flags) register consists of individual binary bits
that control the operation of the CPU or reflect the outcome of some CPU operation. Some
instructions test and manipulate individual processor flags.

</rich_text>
			<rich_text weight="heavy">Control Flags </rich_text>
			<rich_text>Control flags control the CPU’s operation. For example, they can cause the
CPU to break after every instruction executes, interrupt when arithmetic overflow is detected,
enter virtual-8086 mode, and enter protected mode.

</rich_text>
			<rich_text weight="heavy">Status Flags</rich_text>
			<rich_text> The status flags reflect the outcomes of arithmetic and logical operations per-
formed by the CPU. They are the Overflow, Sign, Zero, Auxiliary Carry, Parity, and Carry flags.
Their abbreviations are shown immediately after their names:
• The Carry flag (CF) is set when the result of an unsigned arithmetic operation is too large to
fit into the destination.
• The Overflow flag (OF) is set when the result of a signed arithmetic operation is too large or
too small to fit into the destination.
• The Sign flag (SF) is set when the result of an arithmetic or logical operation generates a
negative result.
• The Zero flag (ZF) is set when the result of an arithmetic or logical operation generates a
result of zero.
• The Auxiliary Carry flag (AC) is set when an arithmetic operation causes a carry from bit 3
to bit 4 in an 8-bit operand.
• The Parity flag (PF) is set if the least-significant byte in the result contains an even number
of 1 bits. Otherwise, PF is clear. In general, it is used for error checking when there is a possi-
bility that data might be altered or corrupted.

Section review
1. Protected, virtual, and real address mode
2. EAX, EBX, ECX, EDX, ESI, EDI, ESP, EBP.
3. CS, SS, DS, GS, FS, ES
4. Loop counter.

</rich_text>
			<encoded_png char_offset="1799">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</encoded_png>
			<encoded_png char_offset="2034"></encoded_png>
			<table char_offset="2037" col_max="500" col_min="40">
				<row>
					<cell>EAX</cell>
					<cell>AX</cell>
					<cell>AH</cell>
					<cell>AL</cell>
				</row>
				<row>
					<cell>EBX</cell>
					<cell>BX</cell>
					<cell>BH</cell>
					<cell>BL</cell>
				</row>
				<row>
					<cell>ECS</cell>
					<cell>CX</cell>
					<cell>CH</cell>
					<cell>CL</cell>
				</row>
				<row>
					<cell>EDX</cell>
					<cell>DX</cell>
					<cell>DH</cell>
					<cell>DL</cell>
				</row>
				<row>
					<cell>32-bit</cell>
					<cell>16-bit</cell>
					<cell>8-bit (high)</cell>
					<cell>8-bit (low)</cell>
				</row>
			</table>
			<table char_offset="2133" col_max="500" col_min="40">
				<row>
					<cell>ESI</cell>
					<cell>SI</cell>
				</row>
				<row>
					<cell>EDI</cell>
					<cell>DI</cell>
				</row>
				<row>
					<cell>EBP</cell>
					<cell>BP</cell>
				</row>
				<row>
					<cell>ESP</cell>
					<cell>SP</cell>
				</row>
				<row>
					<cell>32-bit</cell>
					<cell>16-bit</cell>
				</row>
			</table>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="2.3 64-bit x86 Processors" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601770125.74" ts_lastsave="1601771238.24" unique_id="10">
			<rich_text>Essential features:
1. It is backward-compatible with the x86 instruction set.
2. Addresses are 64 bits long, allowing for a virtual address space of size 2 64 bytes. In current
chip implementations, only the lowest 48 bits are used.
3. It can use 64-bit general-purpose registers, allowing instructions to have 64-bit integer
operands.
4. It uses eight more general-purpose registers than the x86.
5. It uses a 48-bit physical address space, which supports up to 256 terabytes of RAM.

64-Bit Operation Modes

</rich_text>
			<rich_text weight="heavy">Compatibility Mode</rich_text>
			<rich_text>
When running in compatibility mode, existing 16-bit and 32-bit applications can usually run
without being recompiled. However, 16-bit Windows (Win16) and DOS applications will not
run in 64-bit Microsoft Windows. 
</rich_text>
			<rich_text weight="heavy">64-Bit Mode</rich_text>
			<rich_text>
In 64-bit mode, the processor runs applications that use the 64-bit linear address space. This is
the native mode for 64-bit Microsoft Windows. This mode enables 64-bit instruction operands.

</rich_text>
			<rich_text weight="heavy">Basic 64-bit execution environment</rich_text>
			<rich_text>
• Sixteen 64-bit general purpose registers (in 32-bit mode, you have only eight general-purpose
registers)
• Eight 80-bit floating-point registers
• A 64-bit status flags register named RFLAGS (only the lower 32 bits are used)
• A 64-bit instruction pointer named RIP

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

</rich_text>
			<table char_offset="1252" col_max="1000" col_min="40">
				<row>
					<cell>8 bits</cell>
					<cell>AL, BL, CL, DL, DIL, SIL, BPL, SPL, R8L, R9L, R10L, R11L, R12L, R13L, R14L, R15L</cell>
				</row>
				<row>
					<cell>16 bits</cell>
					<cell>AX, BX, CX, DX, DI, SI, BP, SP, R8W, R9W, R10W, R11W, R12W, R13W, R14W, R15W</cell>
				</row>
				<row>
					<cell>32 bits</cell>
					<cell>EAX, EBX, ECX, EDX, EDI, ESI, EBP, ESP, R8D, R9D, R10D, R11D, R12D, R13D,
R14D, R15D</cell>
				</row>
				<row>
					<cell>64 bits</cell>
					<cell>RAX, RBX, RCX, RDX, RDI, RSI, RBP, RSP, R8, R9, R10, R11, R12, R13, R14, R15</cell>
				</row>
				<row>
					<cell>Operand Size</cell>
					<cell>Available Registers</cell>
				</row>
			</table>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="2.4 Components of a x86 computer" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601771257.42" ts_lastsave="1601771258.48" unique_id="11">
			<rich_text>ROM: Read only memory
EPROM: Erasable programmable read only memory
DRAM: Dynamic random access memory
SRAM: Static RAM
VRAM: Video RAM
CMOS RAM: Complimentary metal oxide semiconductor RAM

• ROM is permanently burned into a chip and cannot be erased.
• EPROM can be erased slowly with ultraviolet light and reprogrammed.
• DRAM, commonly known as main memory, is where programs and data are kept when a
program is running. It is inexpensive, but must be refreshed every millisecond to avoid losing
its contents. Some systems use ECC (error checking and correcting) memory.
• SRAM is used primarily for expensive, high-speed cache memory. It does not have to be
refreshed. CPU cache memory is comprised of SRAM.
• VRAM holds video data. It is dual ported, allowing one port to continuously refresh the dis-
play while another port writes data to the display.
• CMOS RAM on the system motherboard stores system setup information. It is refreshed by
a battery, so its contents are retained when the computer’s power is off.</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="2.5 Input Output System" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601771269.12" ts_lastsave="1601773197.27" unique_id="12">
			<rich_text>Levels of I/O Access:

• High-level language functions: A high-level programming language such as C++ or Java
contains functions to perform input–output. These functions are portable because they work
on a variety of different computer systems and are not dependent on any one operating
system.
• Operating system: Programmers can call operating system functions from a library known
as the API (application programming interface). The operating system provides high-level opera-
tions such as writing strings to files, reading strings from the keyboard, and allocating blocks of
memory.
• BIOS: The basic input–output system is a collection of low-level subroutines that communi-
cate directly with hardware devices. The BIOS is installed by the computer’s manufacturer and
is tailored to fit the computer's hardware.

Example of a I/O process for representing a string:

1. A statement in the application program calls an HLL library function that writes the string to
standard output.
2. The library function (Level 3) calls an operating system function, passing a string pointer.
3. The operating system function (Level 2) uses a loop to call a BIOS subroutine, passing it the
ASCII code and color of each character. The operating system calls another BIOS subroutine
to advance the cursor to the next position on the screen.
4. The BIOS subroutine (Level 1) receives a character, maps it to a particular system font, and
sends the character to a hardware port attached to the video controller card.
5. The video controller card (Level 0) generates timed hardware signals to the video display that
control the raster scanning and displaying of pixels.

• Level 3: Call library functions to perform generic text I/O and file-based I/O. We supply such
a library with this book, for instance.
• Level 2: Call operating system functions to perform generic text I/O and file-based I/O. If the OS
uses a graphical user interface, it has functions to display graphics in a device-independent way.
• Level 1: Call BIOS functions to control device-specific features such as color, graphics,
sound, keyboard input, and low-level disk I/O.
• Level 0: Send and receive data from hardware ports, having absolute control over specific
devices. This approach cannot be used with a wide variety of hardware devices, so we say
that it is not portable. Different devices often use different hardware ports, so the program
code must be customized for each specific type of device.

What are the tradeoffs? Control versus portability is the primary one. Level 2 (OS) works on
any computer running the same operating system. If an I/O device lacks certain capabilities, the
OS will do its best to approximate the intended result. Level 2 is not particularly fast because
each I/O call must go through several layers before it executes.

</rich_text>
		</node>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="False" name="Chapter 3" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601773208.48" ts_lastsave="1609631962.34" unique_id="14">
		<rich_text>Chapter 3 is focused on programming in x86 assembly.</rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="3.1 Basic Language Elements" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1601826481.28" ts_lastsave="1609630230.37" unique_id="15">
			<rich_text>addTwo program (adds two numbers together.)

</rich_text>
			<rich_text weight="heavy">Simple asm program</rich_text>
			<rich_text>

main PROC
    move eax,5 ; move 5 to the eax register
    add eax,6 ; add 6 to the eax register
    
    INVOKE ExitProcess,0 ; end the program
main ENDP

</rich_text>
			<rich_text weight="heavy">Variables</rich_text>
			<rich_text>

.data ; this is the data area
sum DWORD 0 ; create a variable named sum

.code ; this is the code area
main PROC 
    move eax,5 ; move 5 to the eax register
    add eax,6 ; add 6 to the eax register
    mov sum,eax 
    
    INVOKE ExitProcess,0 ; end the program
main ENDP

</rich_text>
			<rich_text weight="heavy">Integer Literals</rich_text>
			<rich_text>

An integer literal is made u of an optional leading sign, one or more digits, and an optional radix character that indicates a numbers base

[{+ | -}] digits [radix]

Square brackets are optional, and alements with braces require a choice.

h: hexadecimal
q/o: octal
d: decimal
b: binary
r: encoded real
t: decimal (alternate)
y: binary (altrnate)

26 ; decimal
26d ; decimal
11010011b ; binary
42q ; octal
420 ; octal
1Ah ; hexadecimal
0A4h ; hexadecimal

</rich_text>
			<rich_text weight="heavy">Constant Integer Expressions</rich_text>
			<rich_text>

Each integer expression must evaluate to an integer, which can be stored in 32 bits. The arithmetic operators in the table below are listed in their precedence order, from highest (1) to lowest (4). The important thing to realize about constant integer expressions is that they can only be evaluated at assembly time.

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

Operator precedence refers to the implied order of operations when an expression contains two or more operators.  Example:

4 + 5 * 2          Multiply, add
12 - 1 MOD 5     Modulus, subtract
-5 + 2               Unary minus, add
(4 + 2) * 6        Add, multiply

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

</rich_text>
			<rich_text weight="heavy">Real Number Literals</rich_text>
			<rich_text>

Real number literals are represented as either decimal reals or encoded (hexadecimal) reals. A decimal real contains an optional sign followed by an integer, a decimal point, an optional integer that expresses a fraction, and an optional exponent.

[sign]integer.[integer][exponent]

sign {+,-}
exponent E[{+,-}]integer

Examples of valid decimal reals: 

2.
+3.0
-44.2E+05
26.E5

</rich_text>
			<rich_text weight="heavy">Character Literals</rich_text>
			<rich_text>

A character literal is a single character enclosedd in single or double quotes. Examples:
‘A’
“d”

</rich_text>
			<rich_text weight="heavy">String Literals</rich_text>
			<rich_text>

A string literal is a sequence of characters (including spaces) enclosed in a single or double quotes

‘ABC’
‘X’
“Good night, Gracie”
‘4096’

Embedded quotes are permited when using the opposite equivalent quotes. For example:

“This isn't a test”
‘Say “Good night,” Gracie’

</rich_text>
			<rich_text weight="heavy">Reserved Words</rich_text>
			<rich_text>

Reserved words have special meaning and can only be used in their correct context. Reserved words, by default, are not case-sensitive. For example, MOV is rhe same as mov and Mov. Thre are different types of reserved words:
    Instruction mnemonics, such as MOV, ADD, and MUL
    Register names
    Directives, which tell the assembler how to assemble programs
    Attributes, which provide size and usage information for variables and operands. Examples are BYTE and WORD
    Operators, used in constant expressions
    Predefined symbols, such as @data, which return constant integer values at assembly time
    
A common list of reserved words can be found in Appendix A

</rich_text>
			<rich_text weight="heavy">Identifiers</rich_text>
			<rich_text>

An identifier is a programmer-chosen name. It might identify a variable, a constant, a procedure, or code label. 

• They may contain 1 and 247 characters
• They are not case sensitive
• The first character must be a letter (A..Z, a..z), underscore (__), @, ?, or $. Subsequent character may also be digits
• An identifier cannot be the same as an assembler reserved word.

</rich_text>
			<rich_text weight="heavy">Directives</rich_text>
			<rich_text>

A directive is a command embedded in the souce code that is recognized and acted upon by the assembler. Directives do not execute at runtime, but they let you define variables macros, and procedures. Directives are not case sensitive by default.

Example:
myVar DWORD 26 ; directive
mov eax, myvar ; instruction

</rich_text>
			<rich_text weight="heavy">Label</rich_text>
			<rich_text>

A label is an identifier that acts a sa place marker for instructions and data. A label placed just before an instruction implies the instruction's address.

A data label identifies the location of a variable, providing a convenient way to reference the variable in code.

Example with a variable named count:
count DWORD 100

</rich_text>
			<rich_text weight="heavy">Instruction Mnemonic</rich_text>
			<rich_text>

An instruction mnemonic is a short word that identifies an instruction. In english, a mnemonic is a device that assists memory. Similarly, assembly language mnemonics such s mov, add, and sub provide hints about the type of operation that they perform. 

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

</rich_text>
			<rich_text weight="heavy">Operand</rich_text>
			<rich_text>

An operand is a value that is used for input or output for an instruction. Assembly language
instructions can have between zero and three operands, each of which can be a register, memory
operand, integer expression, or input–output port.

</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

You can think of operands as parameters, and mnemonics as functions.

</rich_text>
			<rich_text weight="heavy">Comments</rich_text>
			<rich_text>

COMMENT !
    Block comment
    Block comment line two
!

Single line comment ;

</rich_text>
			<rich_text weight="heavy">NOP (No Operation) Instruction</rich_text>
			<rich_text>

NOP takes 1 byte of program storage, doesn't do any work. All it does is defer to the next instruction.

</rich_text>
			<rich_text weight="heavy">Section review</rich_text>
			<rich_text>

1. -35d, DDh, 335o, 11011101b
2. No (a leading zero is required).
3. No (they have the same precedence)
4. Expression: 30 MOD (3 * 4) + (3 – 1) / 2 = 20
5. Real number constant: -6.2E+04
6. No, they can also be enclosed in double quotes.
7. Directives
8. 247 characters
</rich_text>
			<table char_offset="1331" col_max="1000" col_min="40">
				<row>
					<cell>()</cell>
					<cell>Parentheses</cell>
					<cell>1</cell>
				</row>
				<row>
					<cell>+,-</cell>
					<cell>Unary Plus, minus</cell>
					<cell>2</cell>
				</row>
				<row>
					<cell>*,/</cell>
					<cell>Multiply, divide</cell>
					<cell>3</cell>
				</row>
				<row>
					<cell>MOD</cell>
					<cell>Modulus</cell>
					<cell>3</cell>
				</row>
				<row>
					<cell>+,-</cell>
					<cell>Add, subtract</cell>
					<cell>4</cell>
				</row>
				<row>
					<cell>Operator</cell>
					<cell>Name</cell>
					<cell>Precedence Level</cell>
				</row>
			</table>
			<table char_offset="1598" col_max="1000" col_min="40">
				<row>
					<cell>16 / 5</cell>
					<cell>3</cell>
				</row>
				<row>
					<cell>-(3 + 4) * (6 - 1)</cell>
					<cell>-35</cell>
				</row>
				<row>
					<cell>-3 +4 * 6 - 1</cell>
					<cell>20</cell>
				</row>
				<row>
					<cell>25 mod 3</cell>
					<cell>1</cell>
				</row>
				<row>
					<cell>Expression</cell>
					<cell>Value</cell>
				</row>
			</table>
			<table char_offset="4431" col_max="1000" col_min="40">
				<row>
					<cell>MOV</cell>
					<cell>Move (assign) one value to another</cell>
				</row>
				<row>
					<cell>ADD </cell>
					<cell>Add two values</cell>
				</row>
				<row>
					<cell>SUB</cell>
					<cell>Subtract one value from another</cell>
				</row>
				<row>
					<cell>MUL</cell>
					<cell>Multiply two values</cell>
				</row>
				<row>
					<cell>JMP</cell>
					<cell>Jump to a new location</cell>
				</row>
				<row>
					<cell>CALL</cell>
					<cell>Call a procedure</cell>
				</row>
				<row>
					<cell>Mnemonic</cell>
					<cell>Description</cell>
				</row>
			</table>
			<table char_offset="4683" col_max="1000" col_min="40">
				<row>
					<cell>96</cell>
					<cell>Integer Literal</cell>
				</row>
				<row>
					<cell>2 + 4</cell>
					<cell>Integer expression</cell>
				</row>
				<row>
					<cell>eax</cell>
					<cell>Register</cell>
				</row>
				<row>
					<cell>count</cell>
					<cell>Memory</cell>
				</row>
				<row>
					<cell>Example</cell>
					<cell>Operand Type</cell>
				</row>
			</table>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="3.2 Example: Adding and Subtracting Integers" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1609630327.19" ts_lastsave="1609631926.63" unique_id="17">
			<rich_text weight="heavy">Example program</rich_text>
			<rich_text>

Addtwo.asm

Line 4 contains the .386 directive, which identifies it as a 32 bit program that can access 32 bit registers and addresses.
Line 5 selects the program's memory model (flat), and identifies the calling convention (named stdcall) for procedures
Line 7 declares a prototype for the ExitProcess function, which is a standard Windows service.

ctr+shift+b will run the program in visual studio.

</rich_text>
			<rich_text weight="heavy">Debugging</rich_text>
			<rich_text>

Step into: the debugger will increment into the next instruction
Step over: the debugger will increment into the next instruction, but if it involved a function call, then it will not move forward
Step out: the debugger will keep incrementing until you are out of the function call

</rich_text>
			<rich_text weight="heavy">Program Template</rich_text>
			<rich_text>



Section Review:

1. The INCLUDE directive copies necessary definitions and setup information from the Irvine32.inc text file. The data from this file are inserted into the data stream read by the assembler.
2. The .code directive declares where the code is
3. Code and data
4. Eax
5. INVOKE ExitProcess,0</rich_text>
			<codebox char_offset="16" frame_height="250" frame_width="700" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">1: ; AddTwo.asm - adds two 32-bit integers
2: ; Chapter 3 example
3:
4: .386
5: .model flat,stdcall
6: .stack 4096
7: ExitProcess PROTO, dwExitCode:DWORD
8:
9:.code
10: main PROC
11:     mov     eax,5   ; move 5 to the eax register
12:     add     eax,6   ; add 6 to the eax register
13:
14:     INVOKE ExitProcess,0
15: main ENDP
16: END main</codebox>
			<codebox char_offset="733" frame_height="250" frame_width="700" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="sh" width_in_pixels="True">; Program template (Template.asm)
.386
.model flat,stdcall
.stack 4096
ExitProcess PROTO, dwExitCode:DWORD

.data
    ; declare variables here
.code
main PROC
    ; write your code here

    INVOKE ExitProcess,0
main ENDP
END main</codebox>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="3.3 Assembling, Linking, and Running Programs" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1609631962.34" ts_lastsave="1609632217.83" unique_id="18">
			<rich_text>The source .asm file cannot be executed directly. Instead, it has to be assembled into executable code. In fact, an assembler is very similar to a compiler. The assembler produces a file containing machine language called an object file. This file isn't quite ready to execute. It must be passed to another program called a linker, which in turn produces an executable file. This file is ready to execute from the operating system's command prompt.

The Assemble-Link-Execute Cycle

Step 1: A programmer uses a text editor to create an ASCII text file named the source file
Step 2: The assembler reads the source file and produces an object file, a machine language translation of the program. Optionally, it produces a listing file.
Step 3: The linker reads the object file and checks to see if the program contains any calls to procedures in a link library. The linker copies any required procedures from the link library, combines them with the object file, and produces an executable file.
Step 4: The operating system loader utility reads the executable file into memory and branches the CPU to the program's starting address, and the program begins to execute.</rich_text>
		</node>
	</node>
</cherrytree>
